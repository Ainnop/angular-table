// author: Samuel Mueller 
// homepage: http://github.com/ssmm/angular-table 
!function(){angular.module("angular-table",[]),angular.module("angular-table").service("attributeExtractor",function(){return{extractWidth:function(t){var e;return e=/([0-9]+px)/i.exec(t),e?e[0]:""},isSortable:function(t){var e;return e=/(sortable)/i.exec(t),e?!0:!1},extractTitle:function(t){return t.attr("title")||t.attr("attribute")},extractAttribute:function(t){return t.attr("attribute")}}}),angular.module("angular-table").directive("atTable",["attributeExtractor",function(t){var e,r;return e=function(t){return t.charAt(0).toUpperCase()+t.slice(1)},r=function(r){var a,n,i,u,c,l,o,g,s,d,f,p,m,P,b,h;if(g=r.find("thead"),g[0]){for(d=g.find("tr"),n={},h=d.find("th"),p=0,P=h.length;P>p;p++)o=h[p],o=angular.element(o),n[o.attr("attribute")]=o.html();for(d.remove(),l=r.find("td"),d=$("<tr></tr>"),m=0,b=l.length;b>m;m++)c=l[m],c=angular.element(c),a=t.extractAttribute(c),o=$("<th style='cursor: pointer; -webkit-user-select: none;'></th>"),s=n[a]||e(t.extractTitle(c)),o.html(""+s),u=c[0].attributes.sortable||t.isSortable(c.attr("class")),u&&(o.attr("ng-click","predicate = '"+a+"'; descending = !descending;"),i=angular.element("<i style='margin-left: 10px;'></i>"),i.attr("ng-class","getSortIcon('"+a+"')"),o.append(i)),f=t.extractWidth(c.attr("class")),o.attr("width",f),d.append(o);return g.append(d)}},{restrict:"AC",scope:{list:"=",scope:"=",query:"=",pager:"="},compile:function(t){var e,a;return r(t),e=t.find("tbody"),a=e.find("tr"),a.attr("ng-repeat","item in list | limitTo:fromPage() | limitTo:toPage() | orderBy:predicate:descending"),{post:function(t){return t.getSortIcon=function(e){return e!==t.predicate?"icon-minus":t.descending?"icon-chevron-down":"icon-chevron-up"},t.fromPage=function(){return t.pager?t.pager.fromPage():t.list.length},t.toPage=function(){return t.pager?t.pager.itemsPerPage:t.list.length}}}}}}]),angular.module("angular-table").directive("atImplicit",["attributeExtractor",function(t){return{restrict:"AC",compile:function(e){var r;return r=t.extractAttribute(e),e.append("{{item."+r+"}}")}}}]),angular.module("angular-table").directive("atPager",["attributeExtractor",function(){return{replace:!0,restrict:"E",template:"      <div class='pagination' style='margin: 0px;'>        <ul>          <li ng-class='{disabled: currentPage <= 0}'>            <a href='' ng-click='goToPage(currentPage - 1)'>&laquo;</a>          </li>          <li ng-class='{active: currentPage == page}' ng-repeat='page in pages'>            <a href='' ng-click='goToPage(page)'>{{page + 1}}</a>          </li>          <li ng-class='{disabled: currentPage >= numberOfPages - 1}'>            <a href='' ng-click='goToPage(currentPage + 1); normalize()'>&raquo;</a>          </li>        </ul>      </div>",scope:{itemsPerPage:"@",instance:"=",list:"="},link:function(t){return t.currentPage=0,t.update=function(){var e;return t.numberOfPages=Math.ceil(t.list.length/t.itemsPerPage),t.pages=function(){var r,a,n;for(n=[],e=r=0,a=t.numberOfPages-1;a>=0?a>=r:r>=a;e=a>=0?++r:--r)n.push(e);return n}()},t.fromPage=function(){return t.itemsPerPage*t.currentPage-t.list.length},t.goToPage=function(e){return 0>e?e=0:e>t.numberOfPages-1&&(e=t.numberOfPages-1),t.currentPage=e},t.update(),t.instance=t,t.$watch("list",function(){return t.update()})}}}])}.call(this);