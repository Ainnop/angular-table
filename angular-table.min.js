// author: Samuel Mueller http://github.com/ssmm
(function(){angular.module("angular-table",[]),angular.module("angular-table").service("attributeExtractor",function(){return{extractWidth:function(a){var b;return b=/([0-9]+px)/i.exec(a),b?b[0]:""},isSortable:function(a){var b;return b=/(sortable)/i.exec(a),b?!0:!1},extractTitle:function(a){return a.attr("title")||a.attr("attribute")},extractAttribute:function(a){return a.attr("attribute")}}}),angular.module("angular-table").directive("atTable",["attributeExtractor",function(a){var b,c;return b=function(a){return a.charAt(0).toUpperCase()+a.slice(1)},c=function(c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s;if(k=c.find("thead"),k[0]){for(m=k.find("tr"),e={},s=m.find("th"),o=0,q=s.length;q>o;o++)j=s[o],j=angular.element(j),e[j.attr("attribute")]=j.html();for(m.remove(),i=c.find("td"),m=$("<tr></tr>"),p=0,r=i.length;r>p;p++)h=i[p],h=angular.element(h),d=a.extractAttribute(h),j=$("<th style='cursor: pointer; -webkit-user-select: none;'></th>"),l=e[d]||b(a.extractTitle(h)),j.html(""+l),g=h[0].attributes.sortable||a.isSortable(h.attr("class")),g&&(j.attr("ng-click","predicate = '"+d+"'; descending = !descending;"),f=angular.element("<i style='margin-left: 10px;'></i>"),f.attr("ng-class","getSortIcon('"+d+"')"),j.append(f)),n=a.extractWidth(h.attr("class")),j.attr("width",n),m.append(j);return k.append(m)}},{restrict:"AC",scope:{list:"=",scope:"=",query:"=",pager:"="},compile:function(a){var e,f;return c(a),e=a.find("tbody"),f=e.find("tr"),f.attr("ng-repeat","item in list | limitTo:fromPage() | limitTo:toPage() | orderBy:predicate:descending"),{post:function(a){return a.getSortIcon=function(b){return b!==a.predicate?"icon-minus":a.descending?"icon-chevron-down":"icon-chevron-up"},a.fromPage=function(){return a.pager?a.pager.fromPage():a.list.length},a.toPage=function(){return a.pager?a.pager.itemsPerPage:a.list.length}}}}}}]),angular.module("angular-table").directive("atImplicit",["attributeExtractor",function(a){return{restrict:"AC",compile:function(b){var e;return e=a.extractAttribute(b),b.append("{{item."+e+"}}")}}}]),angular.module("angular-table").directive("atPager",["attributeExtractor",function(){return{replace:!0,restrict:"E",template:"      <div class='pagination' style='margin: 0px;'>        <ul>          <li ng-class='{disabled: currentPage <= 0}'>            <a href='' ng-click='goToPage(currentPage - 1)'>&laquo;</a>          </li>          <li ng-class='{active: currentPage == page}' ng-repeat='page in pages'>            <a href='' ng-click='goToPage(page)'>{{page + 1}}</a>          </li>          <li ng-class='{disabled: currentPage >= numberOfPages - 1}'>            <a href='' ng-click='goToPage(currentPage + 1); normalize()'>&raquo;</a>          </li>        </ul>      </div>",scope:{itemsPerPage:"@",instance:"=",list:"="},link:function(a){return a.currentPage=0,a.update=function(){var b;return a.numberOfPages=Math.ceil(a.list.length/a.itemsPerPage),a.pages=function(){var c,d,e;for(e=[],b=c=0,d=a.numberOfPages-1;d>=0?d>=c:c>=d;b=d>=0?++c:--c)e.push(b);return e}()},a.fromPage=function(){return a.itemsPerPage*a.currentPage-a.list.length},a.goToPage=function(b){return 0>b?b=0:b>a.numberOfPages-1&&(b=a.numberOfPages-1),a.currentPage=b},a.update(),a.instance=a,a.$watch("list",function(){return a.update()})}}}])}).call(this);